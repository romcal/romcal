name: Dev branch publishing

on:
  push:
    branches:
      - dev

jobs:
  dev_branch_publishing:
    runs-on: ubuntu-latest

    environment: npm-publish

    if: github.repository == 'romcal/romcal'

    env:
      CI: true
      GITHUB_USER: github-actions
      GITHUB_EMAIL: github-actions@github.com

    steps:
      - name: Git checkout dev branch
        uses: actions/checkout@v2
        with:
          ref: dev
          token: ${{ secrets.REPO_TOKEN }}

      - name: Install node.js and npm
        uses: volta-cli/action@v1

      - name: Automated version bump
        uses: phips28/gh-action-bump-version@master
        with:
          major-wording: 'MajorBump'
          minor-wording: 'MinorBump'
          patch-wording: 'PatchBump'
          rc-wording:
          default: prerelease
          preid: dev
          skip-commit: 'true'
          skip-tag:  'true'

      - name: Read package.json
        uses: culshaw/read-package-node-version-actions@v1
        id: package

      - name: Display bumped version
        run: 'echo "New romcal version: ${{ steps.package.outputs.version }}"'

      - name: Install npm dependencies
        run: npm ci --no-audit

      - name: Update browsers list (caniuse)
        run: npx browserslist@latest --update-db

      - name: Build romcal project (romcal + all calendar bundles)
        run: npm run build

      - name: Run tests
        run: npm run test:without-coverage

      - name: Commit and tag the updated version
        run: |
          git config user.name ${{ env.GITHUB_USER }}
          git config user.email ${{ env.GITHUB_EMAIL }}
          git add .
          git commit -m "ci: bump version to ${{ steps.package.outputs.version }}"
          git push
          git tag v${{ steps.package.outputs.version }}
          git push --tags

      - name: Npm publish a new 'dev' version (romcal + all calendar bundles)
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: node -r ts-node/register scripts/publish.ts
